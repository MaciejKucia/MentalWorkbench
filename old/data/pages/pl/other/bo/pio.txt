====== Metoda podziału i ograniczeń ======
===== Zadanie 14  =====
  * Znajdź najkrótszą drogę komiwojażera algorytmem B&B. Narysuj drzewo rozwiązań, podaj rozwiązanie i długość drogi

^  City  ^  Odległość [km]  ^^^^^
^ ::: ^  City 1  ^  City 2  ^  City 3  ^  City 4  ^  City 5  ^
|  1  |  ?  |  16  |  28  |  12  |  22  |
|  2  |  25  |  ?  |  21  |  24  |  10  |
|  3  |  3  |  27  |  ?  |  19  |  8  |
|  4  |  15  |  26  |  21  |  ?  |  7  |
|  5  |  21  |  20  |  14  |  22  |  ?  |


Upraszczam macierz szukam najmniejszych elementów w wierszach a następnie kolumnach i odejmuje je odpowiednio od reszty. Zapisuję sumę odjętych wartości

^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  16  |  28  |  12  |  22  |  -12  |
^  2  |  25  |  ?  |  21  |  24  |  10  |  -10  |
^  3  |  3  |  27  |  ?  |  19  |  8  |  -3  |
^  4  |  15  |  26  |  21  |  ?  |  7  |  -7  |
^  5  |  21  |  20  |  14  |  22  |  ?  |  -14  |
?: -46

^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  4  |  16  |  0  |  10  |
^  2  |  15  |  ?  |  11  |  14  |  0  |
^  3  |  0  |  24  |  ?  |  16  |  5  |
^  4  |  8  |  19  |  14  |  ?  |  0  |
^  5  |  7  |  6  |  0  |  8  |  ?  |
|     |     |  -4  |     |    |     | 
?: -4

LB: -46-4 = -50
LB Lower Bond - dolne ograniczenie

Nowa macierz kosztów
^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  **0**  |  16  |  **0**  |  10  |
^  2  |  15  |  ?  |  11  |  14  |  **0**  |
^  3  |  **0**  |  20  |  ?  |  16  |  5  |
^  4  |  8  |  15  |  14  |  ?  |  **0**  |
^  5  |  7  |  2  |  **0**  |  8  |  ?  |

Wyszukuje wiersze i kolumny w poszukiwaniu najmniejszych elementów, zera uwzględnia się kiedy występują co najmniej 2 razy
^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  **0**  |  16  |  **0**  |  10  ^  0  |
^  2  |  15  |  ?  |  11  |  14  |  **0**  ^  11  |
^  3  |  **0**  |  20  |  ?  |  16  |  5  ^  5  |
^  4  |  8  |  15  |  14  |  ?  |  **0**  ^  8  |
^  5  |  7  |  2  |  **0**  |  8  |  ?  ^  2  |
^     ^  7  ^  2  ^  11  ^  8  ^  0  ^

Tworzę listę przejść i określam ich koszt (tam gdzie zera, suma: wiersze potem kolumny):
  * 1<->2: 0+2 = 2
  * 1<->4: 0+8 = 8
  * 2<->5: 11+0 = 11
  * 3<->1: 5+7 = 12
  * 4<->5: 8+0 = 8
  * 5<->3: 2+11 = **13**

Zaznaczam największą wartość sprawdzam 2 możliwości przejść

{{:other:bo:ogr1.png}}

G1: Usuwamy kolumnę i wiersz dla wartości maksymalnej
^  ^   1  ^  2  ^  4  ^  5  ^
^  1  |  ?  |  0  |  0  |  10  |
^  2  |  15  |  ?  |  14  |  0  |
^  3  |  0  |  20  |  16  |  __?__  |
^  4  |  8  |  15  |  ?  |  0  |
Tej macierzy nie trzeba upraszczać
LB = -50 + 0

G2: Blokujemy przejście
^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  0  |  16  |  0  |  10  |  0  |
^  2  |  15  |  ?  |  11  |  14  |  0  |  0  |
^  3  |  0  |  20  |  ?  |  16  |  5  |  0  |
^  4  |  8  |  15  |  14  |  ?  |  0  |  0  |
^  5  |  7  |  2  |  __?__  |  8  |  ?  |  -2  |
|     |  0  |  0  |  -11  |  0  |  0  |

^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  0  |  5  |  0  |  10  |  
^  2  |  15  |  ?  |  0  |  14  |  0  | 
^  3  |  0  |  20  |  ?  |  16  |  5  | 
^  4  |  8  |  15  |  3  |  ?  |  0  |  
^  5  |  5  |  0  |  ?  |  6  |  ?  |  
LB = -50 - 2 - 11 = -63

Wybieram G1

^  ^   1  ^  2  ^  4  ^  5  ^
^  1  |  ?  |  **0**  |  **0**  |  10  ^  0  |
^  2  |  15  |  ?  |  14  |  **0**  ^  14  |
^  3  |  **0**  |  20  |  16  |  ?  ^  16  |
^  4  |  8  |  15  |  ?  |  **0**  ^  8  |
|     ^  8  ^ 15  ^  14  ^  0  ^

Tworzę listę przejść i określam ich koszt:
  * 1<->2: 0+15 = 15
  * 1<->4: 0+14 = 14
  * 2<->5: 14+0 = 14
  * 3<->1: 16+8 = **24**
  * 4<->5: 8+0 = 8

Sprawdzam możliwości:

{{:other:bo:ogr2.png}}

G3: znowu redukuję

^  ^  2  ^  4  ^  5  ^
^  1  |  0  |  0  |  10  | 0 |
^  2  |  ?  |  14  |  0  | 0 |
^  4  |  15  |  ?  |  0  | 0 |
|     |  0  |  0  |  0  |
Nie trzeba upraszczać LB = 50

G4:

^  ^   1  ^  2  ^  4  ^  5  ^
^  1  |  ?  |  0  |  0  |  10  |  |
^  2  |  15  |  ?  |  14  |  0  |  |
^  3  |  __?__  |  20  |  16  |  ?  |  -16  |
^  4  |  8  |  15  |  ?  |  0  |  |
|     |  -8  |   |   |   |

^  ^   1  ^  2  ^  4  ^  5  ^
^  1  |  ?  |  0  |  0  |  10  |
^  2  |  7  |  ?  |  14  |  0  |
^  3  |  ?  |  4  |  0  |  ?  |
^  4  |  0  |  15  |  ?  |  0  |
LB = -50 -8 -16 = -74

Wybieram G3

^  ^  2  ^  4  ^  5  ^
^  1  |  **0**  |  **0**  |  10  ^  0  |
^  2  |  ?  |  14  |  **0**  ^  14  |
^  4  |  15  |  ?  |  **0**  ^  15  |
|     ^  15  ^  14  ^  0  |

Tworzę listę przejść i określam ich koszt:
  * 1<->2: 0+15 = **15**
  * 1<->4: 0+14 = 14
  * 2<->5: 14+0 = 14
  * 4<->5: 15+0 = 15
Uwaga! 2 możliwości, 2 ścieżki do takiego samego rozwiązania

Sprawdzam możliwości

{{:other:bo:ogr3.png}}

G5:

^ ^  4  ^  5  ^
^  2  |  14  |  0  |  0  |
^  4  |  ?  |  0  |  0  |
|     |  -14  |  0  |
LB = -50-14 = -64


G6:
^  ^  2  ^  4  ^  5  ^
^  1  |  __?__  |  0  |  10  | 
^  2  |  ?  |  14  |  0  | 
^  4  |  15  |  ?  |  0  | 
|     |  -15  |

^  ^  2  ^  4  ^  5  ^
^  1  |  ?  |  0  |  10  |
^  2  |  ?  |  14  |  0  |
^  4  |  0  |  ?  |  0  |
LB=-50-15=-65

Wybieram (wracam do) G2 którego LB to 63

^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  **0**  |  5  |  **0**  |  10  ^  0  |  
^  2  |  15  |  ?  |  **0**  |  14  |  **0**  ^  0  | 
^  3  |  **0**  |  20  |  ?  |  16  |  5  ^  5  |
^  4  |  8  |  15  |  3  |  ?  |  **0**  ^  3  |  
^  5  |  5  |  **0**  |  ?  |  6  |  ?  ^  5  |  
|     ^  5  ^  0  ^  3  ^ 6  ^  0   |

Tworzę listę przejść i określam ich koszt:
  * 1<->2: 0+0 = 0
  * 1<->4: 0+6 = 6
  * 2<->3: 0+3 = 3
  * 2<->5: 0+0 = 0
  * 3<->1: 5+5 = **10**
  * 4<->5: 3+0 = 3
  * 5<->2: 5+0 = 5

Sprawdzam możliwości

{{:other:bo:ogr4.png}}

G7:

^  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  0  |  __?__  |  0  |  10  |
^  2  |  ?  |  0  |  14  |  0  |
^  4  |  15  |  3  |  ?  |  0  |
^  5  |  0  |  ?  |  6  |  ?  |
LB = -63

G8:

^  ^   1  ^  2  ^  3  ^  4  ^  5  ^
^  1  |  ?  |  0  |  5  |  0  |  10  |  
^  2  |  15  |  ?  |  0  |  14  |  0  | 
^  3  |  __?__  |  20  |  ?  |  16  |  5  | -5  |
^  4  |  8  |  15  |  3  |  ?  |  0  |  
^  5  |  5  |  0  |  ?  |  6  |  ?  |  
|     |  -5  |  0  |  0  |  0  |  0  |
LB = -73

<WRAP center round todo 60%>
TODO
</WRAP>

===== Zadanie 15  =====
  * Wszystkie miejscowości najtańszą trasą. Podaj długość.


^ Miejscowość ^  Odległość  ^^^^^
^ ::: ^  Miejscowość 1  ^  Miejscowość 2  ^  Miejscowość 3  ^  Miejscowość 4  ^  Miejscowość 5  ^ 
^  1  |  ∞  |  100  |  30  |  40  |  10  |
^  2  |  100  |  ∞  |  80  |  20  |  40  |
^  3  |  30  |  80  |  ∞  |  20  |  100  |
^  4  |  40  |  20  |  20  |  ∞  |  90  |
^  5  |  10  |  40  |  100  |  90  |  ∞  |
===== Zadanie 16  =====

* Koszt, długość optymalnej trasy

^  Baza  ^  Koszty transportu  ^^^^^
^ ::: ^  Baza 1  ^  Baza 2  ^  Baza 3  ^  Baza 4  ^  Baza 5  ^
|  ∞  |  100  |  30  |  40  |  10  |
|  100  |  ∞  |  80  |  20  |  40  |
|  30  |  80  |  ∞  |  20  |  100  |
|  40  |  20  |  20  |  ∞  |  90  |
|  10  |  40  |  100  |  90  |  ∞  |

==== Krok 1 ====

<WRAP column 220px>
=== Rzędy ===
|  ∞  |  90  |  20  |  30  |  0  ^  -10  |
|  80  |  ∞  |  60  |  0  |  20  ^  -20  | 
|  10  |  60  |  ∞  |  0  |  80  ^  -20  |
|  20  |  0  |  0  |  ∞  |  70  ^  -20  |
|  0  |  30  |  90  |  80  |  ∞  ^  -10  |
</WRAP>

<WRAP column 220px>
=== Kolumny ===
|  ∞  |  90  |  20  |  30  |  0  |
|  80  |  ∞  |  60  |  0  |  20  |
|  10  |  60  |  ∞  |  0  |  80  |
|  20  |  0  |  0  |  ∞  |  70  |
|  0  |  30  |  90  |  80  |  ∞  |
^ 0 ^ 0 ^ 0 ^0 ^ 0 ^
</WRAP>
<WRAP column 220px>
=== Nowa macierz kosztów ===
|  ∞  |  90  |  20  |  30  |  **0**  ^20 |
|  80  |  ∞  |  60  |  **0**  |  20  ^20|
|  10  |  60  |  ∞  |  **0**  |  80  ^10|
|  20  |  **0**  |  **0**  |  ∞  |  70  ^0|
|  **0**  |  30  |  90  |  80  |  ∞  ^30|
^ 10 ^ 30 ^ 20 ^ 0 ^ 20 |
LB:-80
</WRAP>
<WRAP column 220px>
=== Lista przejść ===
  * 1<->5: 20+20 = 40
  * 2<->4: 20+0 = 0
  * 3<->4: 10+0 = **50**
  * 4<->2: 30+0 = 30
  * 4<->3: 20+0 = 20
  * 5<->1: 30+10 = 40
</WRAP>
<WRAP clear></WRAP>
<WRAP column 220px>
<graphviz dot right 220x220>
digraph G{
        size="15,15"
	node [shape = circle];
	
	G_0 -> G_1 [ label = "<3,4>" ];
	G_0 -> G_2 [ label = "!<3,4>" ];
}
</graphviz>
</WRAP>
<WRAP column 220px>
=== Rem row & col ===
|  ∞  |  90  |  20  |  0  |
|  80  |  ∞  |  60  |  20  |
|  20  |  0  |  0  |  70  |
|  0  |  30  |  90  |  ∞  |
</WRAP>
<WRAP column 220px>
=== Blokuje przejście ===
|  ∞  |  90  |  20  |  30  |  0  |
|  80  |  ∞  |  60  |  0  |  20  |
|  10  |  60  |  ∞  |  ∞  |  80  |
|  20  |  0  |  0  |  ∞  |  70  |
|  0  |  30  |  90  |  80  |  ∞  |
</WRAP>
<WRAP clear></WRAP>
==== Krok 2 ====
===== Zadanie 17  =====

^  Sklep  ^  Odległość [kn]  ^^^^^^
^ ::: ^  Sklep 1  ^  Sklep 2  ^  Sklep 3  ^  Sklep 4  ^  Sklep 5  ^  Sklep 6  ^
|  1  |  ∞  |  3  |  4  |  2  |  8  |  5  |
|  2  |  3  |  ∞  |  7  |  3  |  4  |  2  |
|  3  |  4  |  7  |  ∞  |  6  |  4  |  8  |
|  4  |  2  |  3  |  6  |  ∞  |  9  |  5  |
|  5  |  8  |  4  |  4  |  9  |  ∞  |  3  |
|  6  |  5  |  2  |  8  |  5  |  3  |  ∞  |


[[pl:other:bo:minty|Dalej>>]]